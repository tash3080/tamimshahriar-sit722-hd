name: Deploy to AWS 3

on:
  # push:
  #   branches: [ "main" ]

  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2
  ECR_REPOSITORY1: book-catalog
  ECR_REPOSITORY2: inventory-management
  EKS_CLUSTER: tamim-sit722-cluster
  VERSION: ${{ github.sha }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Verify Docker, Kubernetes and AWS installation
      run: |
        docker --version
        kubectl version --client
        aws --version


    - name: Install docker-compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # - name: Create repositoty on AWS
    #   run: |
    #     aws ecr create-repository --repository-name $ECR_REPOSITORY1 --region $AWS_REGION
    #     aws ecr create-repository --repository-name $ECR_REPOSITORY2 --region $AWS_REGION

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    # - name: Build, tag, and push image to Amazon ECR
    #   id: build-image
    #   env:
    #     ECR_REGISTRY: 
    #   run: |
    #     docker-compose up -d --build
    #     docker tag $ECR_REPOSITORY1:latest $ECR_REGISTRY/$ECR_REPOSITORY1:$VERSION
    #     docker tag $ECR_REPOSITORY2:latest $ECR_REGISTRY/$ECR_REPOSITORY2:$VERSION
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY1:$VERSION
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY2:$VERSION

    - name: Install EKSCTL
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/download/v0.191.0/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin
        eksctl version

    - name: Create the deployment cluster
      run: |
        # eksctl create cluster --name $EKS_CLUSTER --version 1.27 --region $AWS_REGION --nodegroup-name my-nodegroup --node-type t3.medium --nodes 2 --nodes-min 2 --nodes-max 3 --managed
        aws eks --region ap-southeast-2 update-kubeconfig --name tamim-sit722-cluster

    - name: Deploy to Amazon Elastic Kubernetes Service
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |
        # cat $ECR_REGISTRY
        # cat $ECR_REGISTRY/$ECR_REPOSITORY1:$VERSION
        # cat $ECR_REGISTRY/$ECR_REPOSITORY1:$VERSION
        kubectl delete -f ./scripts/kubernetes/deployment.yaml
        kubectl apply -f ./scripts/kubernetes/deployment.yaml 

    - name: Check kubernetes services
      run: |
        kubectl get deployments
        kubectl get pods
        kubectl get services
