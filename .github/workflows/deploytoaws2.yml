name: Deploy to AWS 2

on:
  # push:
  #   branches: [ "main" ]

  workflow_dispatch:

env:
  AWS_REGION: ap-southeast-2 
  ECR_REPOSITORY1: book-catalog  
  ECR_REPOSITORY2: inventory-management
  ECS_CLUSTER: sit722-cluster 

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    # environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Verify Docker and AWS installation
      run: |
        docker --version
        aws --version
        kubectl version --client
        # eksctl version

    - name: install eksctl
      run: |
        brew tap weaveworks/tap
        brew install weaveworks/tap/eksctl
        eksctl version


    - name: Install docker-compose
      uses: KengoTODA/actions-setup-docker-compose@v1
      with:
        version: '2.14.2'

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    # - name: create cluster
    #   run: eksctl create cluster --name my-cluster --version 1.27 --region ap-southeast-2 --nodegroup-name my-nodegroup --node-type t3.medium --nodes 2 --nodes-min 2 --nodes-max 3 --managed

    # - name: Create repositoty on AWS
    #   run: |
    #     aws ecr create-repository --repository-name $ECR_REPOSITORY1 --region $AWS_REGION
    #     aws ecr create-repository --repository-name $ECR_REPOSITORY2 --region $AWS_REGION

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v1

    # - name: Create repositoty on AWS
    #   run: |
    #     aws ecr create-repository --repository-name $ECR_REPOSITORY1 --region $AWS_REGION
    #     aws ecr create-repository --repository-name $ECR_REPOSITORY2 --region $AWS_REGION

    # - name: Build, tag, and push image to Amazon ECR
    #   id: build-image
    #   env:
    #
    #   run: |
    #     # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY1:$IMAGE_TAG .
    #     # docker build -t $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG .
    #     docker-compose up -d --build
    #     docker tag $ECR_REPOSITORY1:latest $ECR_REGISTRY/$ECR_REPOSITORY1:$IMAGE_TAG
    #     docker tag $ECR_REPOSITORY2:latest $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY1:$IMAGE_TAG
    #     docker push $ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG
    #     echo "image1=$ECR_REGISTRY/$ECR_REPOSITORY1:$IMAGE_TAG" >> $GITHUB_OUTPUT
    #     echo "image2=$ECR_REGISTRY/$ECR_REPOSITORY2:$IMAGE_TAG" >> $GITHUB_OUTPUT


